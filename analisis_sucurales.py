# -*- coding: utf-8 -*-
"""
An√°lisis de sucursales con gr√°ficos en navegador (Matplotlib -> HTML/PNG; Plotly -> browser)
Autor: t√∫ :)
"""

# ========================== CONFIG ==========================
EXCEL_FILE   = "Limpia_250811_master_reto_sucursales (version 1).xlsx"
EXPORT_EXCEL = "resultadoS.xlsx"

# ======================== IMPORTS ===========================
import os
import tempfile
import webbrowser
from pathlib import Path

import numpy as np
import pandas as pd

# Matplotlib
import matplotlib
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D  # noqa: F401 (activa proyecci√≥n 3D)

# Plotly
import plotly.express as px
import plotly.io as pio
pio.renderers.default = "browser"  # abre gr√°ficos interactivos en el navegador

# Intentar mpld3 (interactivo HTML para Matplotlib); si falla, haremos fallback a PNG
try:
    import mpld3
    _HAS_MPLD3 = True
except Exception:
    _HAS_MPLD3 = False


# ===================== UTILIDADES UI ========================
def show_in_browser(fig: plt.Figure | None = None, title_prefix: str = "fig"):
    """
    Abre una figura de Matplotlib en el navegador.
    1) Intenta exportar a HTML con mpld3 si est√° disponible.
    2) Si mpld3 no est√° o falla, guarda un PNG temporal y lo abre.
    """
    if fig is None:
        fig = plt.gcf()

    # Intento HTML con mpld3
    if _HAS_MPLD3:
        try:
            tmp = tempfile.NamedTemporaryFile(delete=False, suffix=".html")
            html = mpld3.fig_to_html(fig)
            with open(tmp.name, "w", encoding="utf-8") as f:
                f.write(html)
            webbrowser.open("file://" + os.path.realpath(tmp.name))
            return
        except Exception as e:
            print(f"[Aviso] mpld3 fall√≥, uso PNG est√°tico. Detalle: {e}")

    # Fallback: PNG
    tmp = tempfile.NamedTemporaryFile(delete=False, suffix=".png")
    fig.savefig(tmp.name, dpi=140, bbox_inches="tight")
    webbrowser.open("file://" + os.path.realpath(tmp.name))


# ===================== FUNCIONES C√ÅLCULO ====================
def safe_div(num, den):
    """Divisi√≥n segura (evita divisi√≥n por cero)."""
    num = pd.to_numeric(num, errors="coerce")
    den = pd.to_numeric(den, errors="coerce").replace(0, np.nan)
    return num / den


# ========================= MAIN =============================
def main():
    # ---------- Cargar Excel ----------
    if not Path(EXCEL_FILE).exists():
        raise FileNotFoundError(
            f"No encontr√© el archivo '{EXCEL_FILE}'. "
            "Pon este script en la MISMA carpeta que el Excel o ajusta EXCEL_FILE."
        )

    df = pd.read_excel(EXCEL_FILE)
    print(f"‚úÖ Excel cargado: {EXCEL_FILE} | Filas: {len(df):,}")

    # ---------- Filtrado inicial (todas estas columnas en 0 o NaN) ----------
    saldo_cols = [
        "Saldo Insoluto Actual",
        "Saldo Insoluto T-01",
        "Saldo Insoluto T-02",
        "Saldo Insoluto T-03",
        "Saldo Insoluto T-04",
        "Saldo Insoluto T-05",
        "Saldo Insoluto T-06",
        "Saldo Insoluto T-12",
    ]
    for c in saldo_cols:
        if c not in df.columns:
            raise KeyError(f"Falta la columna requerida en el Excel: '{c}'")

    filtro = np.logical_and.reduce([(df[c].isna() | (df[c] == 0)) for c in saldo_cols])

    print("\nVendedores con todas las columnas en 0 o nulas:")
    if "Vendedor" in df.columns:
        print(df.loc[filtro, "Vendedor"])
    else:
        print("(No existe columna 'Vendedor' en tu archivo.)")

    df_filtrado = df.loc[~filtro].copy()
    print(f"üîß Se limpiaron {int(filtro.sum())} filas con todos los saldos 0/NaN.")

    # ---------- Reglas Capital‚ÄìFPD ----------
    capital_cols = [
        "Capital Dispersado Actual", "Capital Dispersado T-01", "Capital Dispersado T-02",
        "Capital Dispersado T-03", "Capital Dispersado T-04", "Capital Dispersado T-05",
        "Capital Dispersado T-06", "Capital Dispersado T-07", "Capital Dispersado T-08",
        "Capital Dispersado T-09", "Capital Dispersado T-10", "Capital Dispersado T-11",
        "Capital Dispersado T-12"
    ]
    fpd_cols = [
        "% FPD Actual", "% FPD T-01", "% FPD T-02",
        "% FPD T-03", "% FPD T-04", "% FPD T-05",
        "% FPD T-06", "% FPD T-07", "% FPD T-08",
        "% FPD T-09", "% FPD T-10", "% FPD T-11",
        "% FPD T-12"
    ]

    for col in fpd_cols:
        if col in df_filtrado.columns:
            df_filtrado[col] = pd.to_numeric(df_filtrado[col], errors="coerce")

    for cap_col, fpd_col in zip(capital_cols, fpd_cols):
        if cap_col not in df_filtrado.columns or fpd_col not in df_filtrado.columns:
            continue
        mask_fill_zero = (df_filtrado[cap_col].fillna(0) != 0) & (df_filtrado[fpd_col].isna())
        df_filtrado.loc[mask_fill_zero, fpd_col] = 0

        mask_zero_to_nan = (df_filtrado[cap_col].fillna(0) == 0) & (df_filtrado[fpd_col].fillna(0) == 0)
        df_filtrado.loc[mask_zero_to_nan, fpd_col] = np.nan

    # ---------- Mapeo Regi√≥n‚ÄìZona‚ÄìSucursal ----------
    datos = [
        # Brokers
        ("Brokers", "Centro Metr√≥polis", "Centro Metr√≥polis"),
        ("Brokers", "Conexi√≥n Magna", "Conexi√≥n Magna"),
        ("Brokers", "Enlace Regio", "Enlace Regio"),
        ("Brokers", "Puerto Magna", "Puerto Magna"),
        ("Brokers", "Brokers", "Brokers"),

        # N√∫cleo Uno
        ("N√∫cleo Uno", "Divisi√≥n. Red Mexiquense", "Ciudad Pir√°mide"),
        ("N√∫cleo Uno", "Divisi√≥n. Red Mexiquense", "Valle Verde"),
        ("N√∫cleo Uno", "Divisi√≥n. Red Mexiquense", "R√≠o Blanco"),
        ("N√∫cleo Uno", "Divisi√≥n. Red Mexiquense", "Colina del Sol"),
        ("N√∫cleo Uno", "Divisi√≥n. Red Mexiquense", "Colina del Sol BIS"),
        ("N√∫cleo Uno", "Divisi√≥n. Red Mexiquense", "Parque Jurica"),
        ("N√∫cleo Uno", "Divisi√≥n. Red Mexiquense", "Colina Plateada"),
        ("N√∫cleo Uno", "Divisi√≥n. Red Mexiquense", "Altos de Quer√©taro"),
        ("N√∫cleo Uno", "Divisi√≥n. Red Mexiquense", "Sol y Campo"),
        ("N√∫cleo Uno", "Conexi√≥n Naucalpan", "Sat√©lite 1"),
        ("N√∫cleo Uno", "Conexi√≥n Naucalpan", "Sat√©lite 2"),
        ("N√∫cleo Uno", "Conexi√≥n Naucalpan", "Sat√©lite 3"),
        ("N√∫cleo Uno", "Zona Sur Central", "Bah√≠a Dorada"),
        ("N√∫cleo Uno", "Zona Sur Central", "Costa Marquesa"),
        ("N√∫cleo Uno", "Zona Sur Central", "Bah√≠a Dorada BIS"),
        ("N√∫cleo Uno", "Zona Sur Central", "Alto de Chilpan"),
        ("N√∫cleo Uno", "Zona Sur Central", "Cuautla Vista"),
        ("N√∫cleo Uno", "Zona Sur Central", "Jardines del Valle"),
        ("N√∫cleo Uno", "Zona Sur Central", "Llanos de Igualdad"),
        ("N√∫cleo Uno", "Zona Sur Central", "Parque Jojutla"),
        ("N√∫cleo Uno", "Zona Oriente Valle", "Valle Chalco"),
        ("N√∫cleo Uno", "Zona Oriente Valle", "Monta√±a Azul"),
        ("N√∫cleo Uno", "Zona Oriente Valle", "Reyes Paz A"),
        ("N√∫cleo Uno", "Zona Oriente Valle", "Reyes Paz B"),
        ("N√∫cleo Uno", "Zona Oriente Valle", "Bosques Neza"),
        ("N√∫cleo Uno", "Zona Oriente Valle", "Cumbre Neza"),
        ("N√∫cleo Uno", "Zona Oriente Valle", "Cumbre Neza BIS"),
        ("N√∫cleo Uno", "Zona Oriente Valle", "Riberas Texcoco"),
        ("N√∫cleo Uno", "Zona Norte Valle", "Pinar del Valle"),
        ("N√∫cleo Uno", "Zona Norte Valle", "Cielos de Metepec"),
        ("N√∫cleo Uno", "Zona Norte Valle", "Lomas de Naucalpan"),
        ("N√∫cleo Uno", "Zona Norte Valle", "Puente de Tlalne"),
        ("N√∫cleo Uno", "Zona Norte Valle", "Puente de Tlalne II"),
        ("N√∫cleo Uno", "Zona Norte Valle", "Valles Toluca"),
        ("N√∫cleo Uno", "Zona Norte Valle", "Cumbre Toluca"),
        ("N√∫cleo Uno", "Zona Norte Valle", "Bosques Tultitl√°n"),

        # N√∫cleo Dos
        ("N√∫cleo Dos", "Divisi√≥n. Distrito Central", "Jard√≠n Arag√≥n A"),
        ("N√∫cleo Dos", "Divisi√≥n. Distrito Central", "Pilares del Norte"),
        ("N√∫cleo Dos", "Divisi√≥n. Distrito Central", "Pilares del Norte BIS"),
        ("N√∫cleo Dos", "Divisi√≥n. Distrito Central", "Residencia A"),
        ("N√∫cleo Dos", "Divisi√≥n. Distrito Central", "Residencia B"),
        ("N√∫cleo Dos", "Divisi√≥n. Distrito Central", "Colinas GAM"),
        ("N√∫cleo Dos", "Divisi√≥n. Distrito Central", "Plaza Central"),
        ("N√∫cleo Dos", "Divisi√≥n. Distrito Central", "Los Arcos"),
        ("N√∫cleo Dos", "Divisi√≥n. Distrito Central", "Los Arcos BIS"),
        ("N√∫cleo Dos", "Divisi√≥n. Distrito Central", "Campo Zaragoza"),
        ("N√∫cleo Dos", "Divisi√≥n. Distrito Central", "Lomas Zaragoza"),
        ("N√∫cleo Dos", "Divisi√≥n. Distrito Central", "Campo Zaragoza BIS"),
        ("N√∫cleo Dos", "N√∫cleo Avance", "Avance 1"),
        ("N√∫cleo Dos", "N√∫cleo Avance", "Avance 2"),
        ("N√∫cleo Dos", "N√∫cleo Avance", "Avance 3"),
        ("N√∫cleo Dos", "N√∫cleo Avance", "Avance 4"),
        ("N√∫cleo Dos", "Zona N√∫cleo CDMX", "Parque Obreg√≥n"),
        ("N√∫cleo Dos", "Zona N√∫cleo CDMX", "Centro Viejo"),
        ("N√∫cleo Dos", "Zona N√∫cleo CDMX", "Mirador Tlalpan A"),
        ("N√∫cleo Dos", "Zona N√∫cleo CDMX", "Mirador Tlalpan A BIS"),
        ("N√∫cleo Dos", "Zona N√∫cleo CDMX", "Mirador Tlalpan B"),
        ("N√∫cleo Dos", "Zona N√∫cleo CDMX", "Lagunas de Xochimilco"),
        ("N√∫cleo Dos", "Zona N√∫cleo CDMX", "Plaza Zapata"),
        ("N√∫cleo Dos", "Zona Oriente Conexi√≥n", "Robledal A"),
        ("N√∫cleo Dos", "Zona Oriente Conexi√≥n", "Robledal B"),
        ("N√∫cleo Dos", "Zona Oriente Conexi√≥n", "Campo Florido A"),
        ("N√∫cleo Dos", "Zona Oriente Conexi√≥n", "Campo Florido B"),
        ("N√∫cleo Dos", "Zona Oriente Conexi√≥n", "Campo Florido C"),
        ("N√∫cleo Dos", "Zona Oriente Conexi√≥n", "Campo Florido D"),
        ("N√∫cleo Dos", "Zona Oriente Conexi√≥n", "Riberas del Sur"),
        ("N√∫cleo Dos", "Zona Cordillera Puebla", "Sierra Cordobesa"),
        ("N√∫cleo Dos", "Zona Cordillera Puebla", "Valles de Orizaba"),
        ("N√∫cleo Dos", "Zona Cordillera Puebla", "Alturas de Puebla"),
        ("N√∫cleo Dos", "Zona Cordillera Puebla", "Jardines Manuel"),
        ("N√∫cleo Dos", "Zona Cordillera Puebla", "Lomas Santiago"),
        ("N√∫cleo Dos", "Zona Cordillera Puebla", "Alturas de Puebla BIS"),
        ("N√∫cleo Dos", "Zona Cordillera Puebla", "Llanos Tehuac√°n"),
        ("N√∫cleo Dos", "Zona Cordillera Puebla", "Bosques Tlaxcala"),
        ("N√∫cleo Dos", "Zona Bah√≠a Veracruz", "Colinas Mir√≥n"),
        ("N√∫cleo Dos", "Zona Bah√≠a Veracruz", "Valle Rica"),
        ("N√∫cleo Dos", "Zona Bah√≠a Veracruz", "Puerto Bravo"),
        ("N√∫cleo Dos", "Zona Bah√≠a Veracruz", "Puerta Cuauht√©moc"),
        ("N√∫cleo Dos", "Zona Bah√≠a Veracruz", "Puerto Bravo BIS"),
        ("N√∫cleo Dos", "Zona Bah√≠a Veracruz", "Cumbres Xalapa"),
        ("N√∫cleo Dos", "Zona Bah√≠a Veracruz", "Lomas Xalapa"),

        # Red Norte√±a
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Paso del Norte"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","R√≠o Bravo"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Aceros del Norte"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Aceros del Norte BIS"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Paso Nuevo"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Paso Nuevo BIS"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Piedras Altas"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Piedras Altas BIS"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Valles del Norte"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Laguna Norte"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Sabinas Sierra"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Campos Saltillo"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Centro Saltillo"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Centro Saltillo BIS"),
        ("Red Norte√±a","Divisi√≥n Red Norte√±a","Campos Saltillo BIS"),

        ("Red Norte√±a", "Zona Sierra Norte", "Lomas de √Ålamos"),
        ("Red Norte√±a", "Zona Sierra Norte", "Lomas de √Ålamos BIS"),
        ("Red Norte√±a", "Zona Sierra Norte", "Valle Apodaca"),
        ("Red Norte√±a", "Zona Sierra Norte", "Valle Apodaca BIS"),
        ("Red Norte√±a", "Zona Sierra Norte", "Puente Lincoln"),
        ("Red Norte√±a", "Zona Sierra Norte", "Cumbres Regias"),
        ("Red Norte√±a", "Zona Sierra Norte", "Centro Regio"),
        ("Red Norte√±a", "Zona Sierra Norte", "Bulevar Regio"),
        ("Red Norte√±a", "Zona Sierra Norte", "San Nicol√°s Valle"),
        ("Red Norte√±a", "Zona Sierra Norte", "San Nicol√°s Valle BIS"),
        ("Red Norte√±a", "Zona Sierra Norte", "Sierra Santa"),

        ("Red Norte√±a", "Zona Red frontera este", "Bosque Verde"),
        ("Red Norte√±a", "Zona Red frontera este", "Palacio del Norte"),
        ("Red Norte√±a", "Zona Red frontera este", "Palacio del Norte BIS"),
        ("Red Norte√±a", "Zona Red frontera este", "Valle de Guadalupe"),
        ("Red Norte√±a", "Zona Red frontera este", "Parque Madero"),
        ("Red Norte√±a", "Zona Red frontera este", "Parque Madero BIS"),
        ("Red Norte√±a", "Zona Red frontera este", "Expo Regia"),
        ("Red Norte√±a", "Zona Red frontera este", "Desierto Norte"),
        ("Red Norte√±a", "Zona Red frontera este", "Desierto Bravo"),
        ("Red Norte√±a", "Zona Red frontera este", "R√≠o Revoluci√≥n"),
        ("Red Norte√±a", "Zona Red frontera este", "Desierto Norte BIS"),

        ("Red Norte√±a", "Zona Bah√≠a del Sol", "Valle Real"),
        ("Red Norte√±a", "Zona Bah√≠a del Sol", "Victoria Alta"),
        ("Red Norte√±a", "Zona Bah√≠a del Sol", "Victoria Alta BIS"),
        ("Red Norte√±a", "Zona Bah√≠a del Sol", "Bah√≠a Aeropuerto"),
        ("Red Norte√±a", "Zona Bah√≠a del Sol", "Plaza Tampico"),
        ("Red Norte√±a", "Zona Bah√≠a del Sol", "Colinas Tampico"),
        ("Red Norte√±a", "Zona Bah√≠a del Sol", "Colinas Tampico BIS"),
        ("Red Norte√±a", "Zona Bah√≠a del Sol", "R√≠o Madero"),

        # Red Noroeste
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Sierra Chihuahua"),
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Campus Sierra"),
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Victoria Sierra"),
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Victoria Sierra BIS"),
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Plaza Cuauht√©moc"),
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Ju√°rez Norte"),
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Jardines del Norte"),
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Americas Plaza"),
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Americas Plaza BIS"),
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Patio Grande"),
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Colinas Jilotepec"),
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Parral Viejo"),
        ("Red Noroeste","Divisi√≥n Sierra del Desierto","Divisi√≥n Sierra del Desierto"),
        ("Red Noroeste","Zona Costa del Pac√≠fico","Bah√≠a Azul"),
        ("Red Noroeste","Zona Costa del Pac√≠fico","Bah√≠a Azul BIS"),
        ("Red Noroeste","Zona Costa del Pac√≠fico","Plaza Pacifico"),
        ("Red Noroeste","Zona Costa del Pac√≠fico","Plaza Pacifico BIS"),
        ("Red Noroeste","Zona Costa del Pac√≠fico","Cabo Fuerte"),
        ("Red Noroeste","Zona Costa del Pac√≠fico","Valle Mexicali"),
        ("Red Noroeste","Zona Costa del Pac√≠fico","Norte Mexicali"),
        ("Red Noroeste","Zona Costa del Pac√≠fico","Valle Mexicali BIS"),
        ("Red Noroeste","Zona Costa del Pac√≠fico","Frontera Oeste"),
        ("Red Noroeste","Zona Costa del Pac√≠fico","Frontera Bravo"),
        ("Red Noroeste","Zona Costa del Pac√≠fico","Frontera Bravo BIS"),
        ("Red Noroeste","Zona Costa del Pac√≠fico","Zona Costa del Pac√≠fico"),
        ("Red Noroeste","Zona Valle Dorado","Valles de Culiac√°n"),
        ("Red Noroeste","Zona Valle Dorado","Culiac√°n Norte"),
        ("Red Noroeste","Zona Valle Dorado","Valles de Culiac√°n BIS"),
        ("Red Noroeste","Zona Valle Dorado","Sierra Durango"),
        ("Red Noroeste","Zona Valle Dorado","Durango Norte"),
        ("Red Noroeste","Zona Valle Dorado","Valle del R√≠o"),
        ("Red Noroeste","Zona Valle Dorado","Plaza Mochis"),
        ("Red Noroeste","Zona Valle Dorado","Plaza Mochis BIS"),
        ("Red Noroeste","Zona Valle Dorado","Bah√≠a Dorada"),
        ("Red Noroeste","Zona Valle Dorado","Norte Dorado"),
        ("Red Noroeste","Zona Valle Dorado","Zona Valle Dorado"),
        ("Red Noroeste","Zona Desierto del Sol","Obreg√≥n Central"),
        ("Red Noroeste","Zona Desierto del Sol","Obreg√≥n Norte"),
        ("Red Noroeste","Zona Desierto del Sol","Obreg√≥n Central BIS"),
        ("Red Noroeste","Zona Desierto del Sol","Sierra Hermosillo"),
        ("Red Noroeste","Zona Desierto del Sol","Hermosillo Norte"),
        ("Red Noroeste","Zona Desierto del Sol","Sierra Hermosillo BIS"),
        ("Red Noroeste","Zona Desierto del Sol","Valle de Navojoa"),
        ("Red Noroeste","Zona Desierto del Sol","Frontera Nogales"),
        ("Red Noroeste","Zona Desierto del Sol","Zona Desierto del Sol"),

        # Occidente Conexi√≥n
        ("Occidente Conexi√≥n","Conexi√≥n GDL","Guadalajara Uno"),
        ("Occidente Conexi√≥n","Conexi√≥n GDL","Guadalajara Dos"),
        ("Occidente Conexi√≥n","Conexi√≥n GDL","Guadalajara Tres"),
        ("Occidente Conexi√≥n","Conexi√≥n GDL","Conexi√≥n GDL"),
        ("Occidente Conexi√≥n","Zona Coraz√≥n de la Sierra","Aguas Central"),
        ("Occidente Conexi√≥n","Zona Coraz√≥n de la Sierra","Aguas Norte"),
        ("Occidente Conexi√≥n","Zona Coraz√≥n de la Sierra","Aguas Central BIS"),
        ("Occidente Conexi√≥n","Zona Coraz√≥n de la Sierra","Sierra Colima"),
        ("Occidente Conexi√≥n","Zona Coraz√≥n de la Sierra","R√≠o Fresnillo"),
        ("Occidente Conexi√≥n","Zona Coraz√≥n de la Sierra","Bah√≠a Manzanillo"),
        ("Occidente Conexi√≥n","Zona Coraz√≥n de la Sierra","San Luis Norte"),
        ("Occidente Conexi√≥n","Zona Coraz√≥n de la Sierra","San Luis Alturas"),
        ("Occidente Conexi√≥n","Zona Coraz√≥n de la Sierra","Cumbres Zacatecas"),
        ("Occidente Conexi√≥n","Zona Coraz√≥n de la Sierra","Zona Coraz√≥n de la Sierra"),
        ("Occidente Conexi√≥n","Zona Valles Centrales","Plaza Celaya"),
        ("Occidente Conexi√≥n","Zona Valles Centrales","Hidalgo Valle"),
        ("Occidente Conexi√≥n","Zona Valles Centrales","Jardines Irapuato"),
        ("Occidente Conexi√≥n","Zona Valles Centrales","Jardines Irapuato BIS"),
        ("Occidente Conexi√≥n","Zona Valles Centrales","Ca√±adas Le√≥n"),
        ("Occidente Conexi√≥n","Zona Valles Centrales","Norte Le√≥n"),
        ("Occidente Conexi√≥n","Zona Valles Centrales","Ca√±adas Le√≥n BIS"),
        ("Occidente Conexi√≥n","Zona Valles Centrales","Zona Valles Centrales"),
        ("Occidente Conexi√≥n","Zona Tierra de lagos","Valle Piedad"),
        ("Occidente Conexi√≥n","Zona Tierra de lagos","Bah√≠a L√°zaro"),
        ("Occidente Conexi√≥n","Zona Tierra de lagos","Colinas Morelia"),
        ("Occidente Conexi√≥n","Zona Tierra de lagos","Morelia Norte"),
        ("Occidente Conexi√≥n","Zona Tierra de lagos","Morelia Norte BIS"),
        ("Occidente Conexi√≥n","Zona Tierra de lagos","Camelinas Plaza"),
        ("Occidente Conexi√≥n","Zona Tierra de lagos","Jardines Uruapan"),
        ("Occidente Conexi√≥n","Zona Tierra de lagos","Valle Zamora"),
        ("Occidente Conexi√≥n","Zona Tierra de lagos","Valle Zamora BIS"),
        ("Occidente Conexi√≥n","Zona Tierra de lagos","Riviera Zihua"),
        ("Occidente Conexi√≥n","Zona Tierra de lagos","Montes Zit√°cuaro"),
        ("Occidente Conexi√≥n","Zona Tierra de lagos","Zona Tierra de lagos"),
        ("Occidente Conexi√≥n","Zona Cumbres del Pac√≠fico","GDL Central"),
        ("Occidente Conexi√≥n","Zona Cumbres del Pac√≠fico","Norte GDL"),
        ("Occidente Conexi√≥n","Zona Cumbres del Pac√≠fico","Riviera Vallarta"),
        ("Occidente Conexi√≥n","Zona Cumbres del Pac√≠fico","Riviera Vallarta BIS"),
        ("Occidente Conexi√≥n","Zona Cumbres del Pac√≠fico","Valle Tepic"),
        ("Occidente Conexi√≥n","Zona Cumbres del Pac√≠fico","Norte Tepic"),
        ("Occidente Conexi√≥n","Zona Cumbres del Pac√≠fico","Jardines Tlaque"),
        ("Occidente Conexi√≥n","Zona Cumbres del Pac√≠fico","Montes Tonal√°"),
        ("Occidente Conexi√≥n","Zona Cumbres del Pac√≠fico","Zona Cumbres del Pac√≠fico"),
        ("Occidente Conexi√≥n","Zona Valles del Pac√≠fico","Guzm√°n Valle"),
        ("Occidente Conexi√≥n","Zona Valles del Pac√≠fico","IMSS GDL"),
        ("Occidente Conexi√≥n","Zona Valles del Pac√≠fico","Oblatos Plaza"),
        ("Occidente Conexi√≥n","Zona Valles del Pac√≠fico","Las √Åguilas"),
        ("Occidente Conexi√≥n","Zona Valles del Pac√≠fico","Zapopan Plaza"),
        ("Occidente Conexi√≥n","Zona Valles del Pac√≠fico","Zona Valles del Pac√≠fico"),

        # Red Sureste
        ("Red Sureste","Zona Selva Alta","R√≠o Coatzacoalcos"),
        ("Red Sureste","Zona Selva Alta","Valle Comit√°n"),
        ("Red Sureste","Zona Selva Alta","Selva Tapachula"),
        ("Red Sureste","Zona Selva Alta","Tuxtla Norte"),
        ("Red Sureste","Zona Selva Alta","Tuxtla Central"),
        ("Red Sureste","Zona Selva Alta","Villa Central"),
        ("Red Sureste","Zona Selva Alta","Villa Norte"),
        ("Red Sureste","Zona Selva Alta","Villa Norte BIS"),
        ("Red Sureste","Zona Selva Alta","Villa Alturas"),
        ("Red Sureste","Zona Selva Alta","Zona Selva Alta"),
        ("Red Sureste","Zona Sierra Escondida","Sierra Oaxaca"),
        ("Red Sureste","Zona Sierra Escondida","Riviera Escondida"),
        ("Red Sureste","Zona Sierra Escondida","Bah√≠a Cruz"),
        ("Red Sureste","Zona Sierra Escondida","Bah√≠a Cruz BIS"),
        ("Red Sureste","Zona Sierra Escondida","R√≠o Tuxtepec"),
        ("Red Sureste","Zona Sierra Escondida","Zona Sierra Escondida"),
        ("Red Sureste","Zona Riviera del Caribe","Bah√≠a Campeche"),
        ("Red Sureste","Zona Riviera del Caribe","Riviera Canc√∫n"),
        ("Red Sureste","Zona Riviera del Caribe","Bah√≠a Chetumal"),
        ("Red Sureste","Zona Riviera del Caribe","Isla del Carmen"),
        ("Red Sureste","Zona Riviera del Caribe","Sierra M√©rida"),
        ("Red Sureste","Zona Riviera del Caribe","M√©rida Norte"),
        ("Red Sureste","Zona Riviera del Caribe","Alturas M√©rida"),
        ("Red Sureste","Zona Riviera del Caribe","Sierra M√©rida BIS"),
        ("Red Sureste","Zona Riviera del Caribe","Riviera Playa"),
        ("Red Sureste","Zona Riviera del Caribe","Zona Riviera del Caribe"),
    ]

    df_mapa = pd.DataFrame(datos, columns=["Regi√≥n", "Zona", "Sucursal"])
    df_final = df_filtrado.merge(df_mapa, on="Sucursal", how="left")
    cols = ["Regi√≥n", "Zona", "Sucursal"] + [c for c in df_final.columns if c not in ["Regi√≥n","Zona","Sucursal"]]
    df_final = df_final[cols]

    # ---------- Columnas calculadas ----------
    tasainteresanual = 0.65 / 12
    tasacostefondeo  = 0.11 / 12

    if {"Saldo Insoluto Actual", "Saldo Insoluto Vencido Actual"}.issubset(df_final.columns):
        df_final["SaldoInsolutoVigente"] = df_final["Saldo Insoluto Actual"] - df_final["Saldo Insoluto Vencido Actual"]
        df_final["InteresGenerado"]      = df_final["SaldoInsolutoVigente"] * tasainteresanual
        df_final["ServiciodeDeuda"]      = df_final["Saldo Insoluto Actual"] * tasacostefondeo

    # ---------- Agrupar por Regi√≥n/Zona/Sucursal ----------
    cols_sumar = (
        ["Saldo Insoluto Actual", "Saldo Insoluto Vencido Actual"]
        + [f"Saldo Insoluto T-{i:02d}" for i in range(1,13)]
        + [f"Saldo Insoluto Vencido T-{i:02d}" for i in range(1,13)]
    )
    cols_sumar = [c for c in cols_sumar if c in df_final.columns]

    df_sucursal = df_final.groupby(["Regi√≥n", "Zona", "Sucursal"], as_index=False)[cols_sumar].sum()

    print("\nVista r√°pida de df_sucursal:")
    print(df_sucursal.head())

    # ---------- ICV (manejo divisi√≥n por cero) ----------
    if {"Saldo Insoluto Vencido Actual", "Saldo Insoluto Actual"}.issubset(df_sucursal.columns):
        df_sucursal["ICV"] = safe_div(df_sucursal["Saldo Insoluto Vencido Actual"],
                                      df_sucursal["Saldo Insoluto Actual"])

    for i in range(1, 13):
        v = f"Saldo Insoluto Vencido T-{i:02d}"
        s = f"Saldo Insoluto T-{i:02d}"
        if {v, s}.issubset(df_sucursal.columns):
            df_sucursal[f"ICV T-{i:02d}"] = safe_div(df_sucursal[v], df_sucursal[s])

    # ---------- An√°lisis preliminar ----------
    if "ServiciodeDeuda" in df_final.columns:
        top15 = df_final.sort_values("ServiciodeDeuda", ascending=False).head(15)
        print("\nTOP 15 por Servicio de Deuda:")
        print(top15[["Sucursal","Regi√≥n","Zona","ServiciodeDeuda"]])
    else:
        print("\n(No existe columna 'ServiciodeDeuda')")

    if "Saldo Insoluto Actual" in df_final.columns:
        suma_insoluto_stat = pd.to_numeric(df_final["Saldo Insoluto Actual"], errors="coerce").sum()
        print(f"\nSuma total 'Saldo Insoluto Actual': ${suma_insoluto_stat:,.2f}\n")

    # ---------- Gr√°fica tablero (Matplotlib -> navegador) ----------
    if "ServiciodeDeuda" in df_final.columns:
        aux = df_final.sort_values("ServiciodeDeuda", ascending=False).head(15)
        fig, ax = plt.subplots(figsize=(10, 5))
        ax.bar(aux["Sucursal"].astype(str), aux["ServiciodeDeuda"])
        ax.set_title("Top 15 Sucursales por Servicio de Deuda")
        ax.tick_params(axis="x", labelrotation=90, labelsize=8)
        plt.tight_layout()
        show_in_browser(fig)

    # ---------- Boxplot ICV por Zona (Matplotlib -> navegador) ----------
    if {"ICV", "Zona"}.issubset(df_sucursal.columns):
        icv_series = pd.to_numeric(df_sucursal["ICV"], errors="coerce").replace([np.inf, -np.inf], np.nan)
        p01, p99 = icv_series.quantile([0.01, 0.99])
        df_clip = df_sucursal[(icv_series >= p01) & (icv_series <= p99)].copy()

        fig, ax = plt.subplots(figsize=(12, 5))
        df_clip.boxplot(column="ICV", by="Zona", showfliers=False, ax=ax)
        ax.set_title("ICV por Zona (recortado p1‚Äìp99)")
        plt.suptitle("")
        ax.set_ylabel("ICV")
        plt.xticks(rotation=45, ha="right")
        plt.tight_layout()
        show_in_browser(fig)

    # ---------- Boxplot ICV por Regi√≥n (Matplotlib -> navegador) ----------
    if {"ICV", "Regi√≥n"}.issubset(df_sucursal.columns):
        icv_series = pd.to_numeric(df_sucursal["ICV"], errors="coerce").replace([np.inf, -np.inf], np.nan)
        p01, p99 = icv_series.quantile([0.01, 0.99])
        df_clip = df_sucursal[(icv_series >= p01) & (icv_series <= p99)].copy()

        fig, ax = plt.subplots(figsize=(12, 5))
        df_clip.boxplot(column="ICV", by="Regi√≥n", showfliers=False, ax=ax)
        ax.set_title("ICV por Regi√≥n (recortado p1‚Äìp99)")
        plt.suptitle("")
        ax.set_ylabel("ICV")
        plt.xticks(rotation=45, ha="right")
        plt.tight_layout()
        show_in_browser(fig)

    # ---------- Scatter 3D interactivo (Plotly -> navegador) ----------
    y_candidates = ["%FPD Actual", "% FPD Actual"]
    y_col = next((c for c in y_candidates if c in df_final.columns), None)
    x_col = "Capital Dispersado Actual" if "Capital Dispersado Actual" in df_final.columns else None
    z_col = "Saldo Insoluto Actual" if "Saldo Insoluto Actual" in df_final.columns else None

    if all([x_col, y_col, z_col]) and {"Sucursal","Regi√≥n","Zona"}.issubset(df_final.columns):
        _df3d = df_final[[x_col, y_col, z_col, "Sucursal", "Regi√≥n", "Zona"]].copy()
        _df3d[x_col] = pd.to_numeric(_df3d[x_col], errors="coerce")
        _df3d[y_col] = pd.to_numeric(_df3d[y_col], errors="coerce")
        _df3d[z_col] = pd.to_numeric(_df3d[z_col], errors="coerce")
        _df3d = _df3d.dropna(subset=[x_col, y_col, z_col])

        fig_plotly = px.scatter_3d(
            _df3d,
            x=x_col, y=y_col, z=z_col,
            color="Regi√≥n",
            hover_data=["Sucursal","Zona","Regi√≥n"],
            size=x_col,
            opacity=0.7,
            title=f"Scatter 3D interactivo: {y_col} vs {x_col} vs {z_col}"
        )
        # abre en navegador autom√°ticamente por pio.renderers
        fig_plotly.show()
    else:
        print("‚õî No se gener√≥ el scatter 3D interactivo (faltan columnas x/y/z o Sucursal/Regi√≥n/Zona).")

    # ---------- Scatter 3D Matplotlib y versi√≥n recortada (-> navegador) ----------
    if all([x_col, y_col, z_col]) and {"Sucursal","Regi√≥n","Zona"}.issubset(df_final.columns):
        OUT = Path("figuras_dimex"); OUT.mkdir(exist_ok=True)

        X = pd.to_numeric(df_final[x_col], errors="coerce")
        Y = pd.to_numeric(df_final[y_col], errors="coerce")
        Z = pd.to_numeric(df_final[z_col], errors="coerce")
        mask = X.notna() & Y.notna() & Z.notna()
        X, Y, Z = X[mask], Y[mask], Z[mask]

        # Completo
        fig = plt.figure()
        ax = fig.add_subplot(111, projection="3d")
        ax.scatter(X, Y, Z, s=8, alpha=0.7)
        ax.set_xlabel(x_col); ax.set_ylabel(y_col); ax.set_zlabel(z_col)
        ax.set_title(f"3D: {y_col} vs {x_col} vs {z_col}")
        plt.tight_layout()
        fig.savefig(OUT / "H_scatter3D_fdp_capital_saldo.png", dpi=140)
        show_in_browser(fig)

        # Recortado p99
        xq, yq, zq = X.quantile(0.99), Y.quantile(0.99), Z.quantile(0.99)
        m_clip = (X <= xq) & (Y <= yq) & (Z <= zq)
        fig2 = plt.figure()
        ax2 = fig2.add_subplot(111, projection="3d")
        ax2.scatter(X[m_clip], Y[m_clip], Z[m_clip], s=8, alpha=0.7)
        ax2.set_xlabel(x_col); ax2.set_ylabel(y_col); ax2.set_zlabel(z_col)
        ax2.set_title(f"3D (p99 clip): {y_col} vs {x_col} vs {z_col}")
        plt.tight_layout()
        fig2.savefig(OUT / "H_scatter3D_fdp_capital_saldo_p99.png", dpi=140)
        show_in_browser(fig2)

        print("‚úÖ Scatter 3D (Matplotlib) generado y abierto en navegador. PNG guardados en ./figuras_dimex/")
    else:
        print("‚õî No se generaron PNG 3D (faltan columnas x/y/z o Sucursal/Regi√≥n/Zona).")

    # ---------- Exportar Excel final ----------
    df_final.to_excel(EXPORT_EXCEL, index=False)
    print(f"\n‚úÖ Exportado: {EXPORT_EXCEL} (aparece en tu carpeta de trabajo)\n")


# ===================== ENTRY POINT ==========================
if __name__ == "__main__":
    # En Windows, asegura backend compatible (opcional)
    try:
        # Backend por defecto suele funcionar; puedes forzar Agg si renders locales dieran problemas:
        # matplotlib.use("Agg")
        pass
    except Exception as e:
        print(f"[Aviso backend Matplotlib] {e}")

    main()
a